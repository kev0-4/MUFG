server:
  http_listen_port: 9080
  grpc_listen_port: 0
positions:
  filename: /tmp/positions.yaml
clients:
  - url: http://65.20.82.164:3100/loki/api/v1/push
scrape_configs:
  - job_name: api_gateway
    docker_sd_configs:
      - host: host.docker.internal
        port: 8080
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3}\s+-\s+)(?P<json>{.*})$'
      - json:
          expressions:
            service: service
            endpoint: endpoint
            user_id: user_id
            status: status
            error: error
      - labels:
          service:
          endpoint:
          user_id:
          status:
          error:
  - job_name: financial
    docker_sd_configs:
      - host: host.docker.internal
        port: 8001
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\s+-\s+[^-]+\s+-\s+[^-]+\s+-\s+[^-]+\s+-\s+[^-]+\s+-\s+\d+\s+-\s+API_CALL:\s+)(?P<json>{.*})$'
      - json:
          expressions:
            service: service
            function: function
            user_id: user_id
            status: status
            api_source: api_source
            cache_hit: cache_hit
      - labels:
          service:
          function:
          user_id:
          status:
          api_source:
          cache_hit:
  - job_name: nlp
    docker_sd_configs:
      - host: host.docker.internal
        port: 8000
    pipeline_stages:
      - json:
          expressions:
            service: service
            user_id: user_id
            status: status
            scenario: scenario
      - labels:
          service:
          user_id:
          status:
          scenario:
  - job_name: analytics
    docker_sd_configs:
      - host: host.docker.internal
        port: 8002
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3}\s+-\s+)(?P<json>{.*})$'
      - json:
          expressions:
            service: service
            endpoint: endpoint
            user_id: user_id
            status: status
            scenario: scenario
      - labels:
          service:
          endpoint:
          user_id:
          status:
          scenario: